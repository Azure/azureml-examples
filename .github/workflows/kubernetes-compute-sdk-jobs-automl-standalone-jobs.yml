name: kubernetes-compute-sdk-jobs-automl-standalone-jobs
on:
  schedule:
    - cron: "0 22 * * *"
  workflow_dispatch:
    inputs:
      TEST_REGION:
        description: 'Resource Region'
        required: false
        default: 'eastus'
      JOB_SELECTOR:
        description: 'Job selector used with grep command to select job workflows'
        required: false
        default: '^sdk-jobs-automl-standalone-jobs.*yml$'
      JOB_FILTER:
        description: 'Job filter used with grep command to filter out job workflows'
        required: false
        default: ''
      TIMEOUT:
        description: 'Timeout of a single job'
        required: false
        default: '120m'
      FILE_TICKET:
        description: 'Whether to file icm ticket: true or false'
        required: false
        default: 'false'
      WORKSPACE:
        description: 'The workspace of the cluster'
        required: false
        default: 'amlarc-githubtest-ws'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/kubernetes-compute-sdk-jobs-automl-standalone-jobs.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SUBSCRIPTION: 6560575d-fa06-4e7d-95fb-f962e74efd7a
      RESOURCE_GROUP: azureml-examples
      WORKSPACE: amlarc-githubtest-ws
      LOCATION: eastus

      JOB_SELECTOR: '^sdk-jobs-automl-standalone-jobs.*yml$'
      JOB_FILTER: ''
      JOB_LIST_FILE: sdk-jobs-automl-standalone-jobs.txt
      TIMEOUT: '120m'
      MIN_SUCCESS_NUM: 1

      FILE_TICKET: true
      KEY_VAULT_NAME: amlarcgithubworkflowkv
      REPOSITORY: https://github.com/Azure/azureml-examples
      WORKFLOW: https://github.com/Azure/azureml-examples/actions/workflows/kubernetes-compute-sdk-jobs-automl-standalone-jobs.yml

    steps:
    - name: replace env from workflow_dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        echo "LOCATION=${{ github.event.inputs.TEST_REGION }}" | tee -a $GITHUB_ENV
        echo "JOB_SELECTOR=${{ github.event.inputs.JOB_SELECTOR }}" | tee -a $GITHUB_ENV
        echo "JOB_FILTER=${{ github.event.inputs.JOB_FILTER }}" | tee -a $GITHUB_ENV
        echo "TIMEOUT=${{ github.event.inputs.TIMEOUT }}" | tee -a $GITHUB_ENV
        echo "FILE_TICKET=${{ github.event.inputs.FILE_TICKET }}" | tee -a $GITHUB_ENV
        echo "WORKSPACE=${{ github.event.inputs.WORKSPACE }}" | tee -a $GITHUB_ENV

    - name: check out repo
      uses: actions/checkout@v2

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"

    - name: pip install notebook reqs
      run: pip install -r sdk/dev-requirements.txt

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_CREDS}}
      timeout-minutes: 30
    
    - name: setup SDK
      run: bash setup.sh
      working-directory: sdk
      continue-on-error: true

    - name: setup CLI
      run: bash setup.sh
      working-directory: cli
      continue-on-error: true

    - name: collect jobs
      run: |
        python .github/kubernetes-compute/sdk_testcase_collector.py -o "$JOB_LIST_FILE" -r "$JOB_SELECTOR"
      timeout-minutes: 30

    - name: run jobs
      run: |
        for job in $(cat $JOB_LIST_FILE); do
            if [[ "$job" = *"ipynb" ]]; then
                echo "Run job: $job"

                FOLDER=$(dirname "$job")
                FILE=$(basename "$job")
                FOLDERBACK=$(echo $FOLDER | sed -e "s/[a-zA-Z0-9\-_-]*\//\.\.\//g")
                FOLDERBACK=$(echo $FOLDERBACK | sed -r "s/\/[a-zA-Z0-9\-_-]+/\/\.\./g")

                echo "$FOLDER|$FILE|$FOLDERBACK"

                cd $FOLDER
                sed -i -e "s/<SUBSCRIPTION_ID>/$SUBSCRIPTION/g" $FILE
                sed -i -e "s/<RESOURCE_GROUP>/$RESOURCE_GROUP/g" $FILE
                sed -i -e "s/<AML_WORKSPACE_NAME>/$WORKSPACE/g" $FILE
                sed -i -e "s/DefaultAzureCredential/AzureCliCredential/g" $FILE
                OUTPUTJOB=$(echo $FILE | sed -e "s/.ipynb/.output.ipynb/g")
                papermill -k python $FILE $OUTPUTJOB &
        
                sleep 900

                cd $FOLDERBACK
            else
                echo "Found invalid job: $job"
            fi
        done

        wait
      timeout-minutes: 300

    - name: check_jobs
      if: ${{ always() }}
      run: |
        python .github/kubernetes-compute/papermill_count_failed_case.py -i "$JOB_LIST_FILE"
      timeout-minutes: 30

    # report metrics
    - name: download_metrics_dependency
      if: ${{ always() && github.event_name != 'pull_request' }}
      run: |
        if [ "$FILE_TICKET" == "true" ]; then
          bash .github/kubernetes-compute/tool.sh install_mdm_dependency
        fi
      timeout-minutes: 30
    - name: start_mdm
      if: ${{ always() && github.event_name != 'pull_request' }}
      run: |
        if [ "$FILE_TICKET" == "true" ]; then
          # download certificates
          export METRIC_ENDPOINT_NAME=METRIC-ENDPOINT-PROD
          export MDM_ACCOUNT_NAME=MDM-ACCOUNT-PROD
          export MDM_NAMESPACE_NAME=MDM-NAMESPACE-PROD
          export KEY_PEM_NAME=AMLARC-KEY-PEM
          export CERT_PEM_NAME=AMLARC-CERT-PEM
          bash .github/kubernetes-compute/tool.sh download_metrics_info
          bash .github/kubernetes-compute/tool.sh start_mdm_container
        fi
      timeout-minutes: 30
    - name: report_failure_metrics
      if: ${{ failure() && github.event_name != 'pull_request' }}
      run: |
        if [ "$FILE_TICKET" == "true" ]; then
          export jobstatus=Failed
          export job="kubernetes-compute-sdk-jobs-automl-standalone-jobs"
          bash .github/kubernetes-compute/tool.sh report_inference_metrics
        fi
      timeout-minutes: 30
    - name: report_succes_metrics
      if: ${{ success() && github.event_name != 'pull_request' }}
      run: |
        if [ "$FILE_TICKET" == "true" ]; then
          export jobstatus=Completed
          export job="kubernetes-compute-sdk-jobs-automl-standalone-jobs"
          bash .github/kubernetes-compute/tool.sh report_inference_metrics
        fi
      timeout-minutes: 30   
    - name: stop_mdm
      if: ${{ always() && github.event_name != 'pull_request' }}
      run: |
        if [ "$FILE_TICKET" == "true" ]; then
          bash .github/kubernetes-compute/tool.sh stop_mdm_container
        fi
      timeout-minutes: 30

    - name: upload notebook's working folder as an artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: component
        path: sdk/jobs/automl-standalone-jobs