name: sdk-bootstrapping-resources
on:
  workflow_dispatch:
  schedule:
    - cron: "0 */6 * * *"
  pull_request:
    branches:
      - main
    paths:
      - sdk/**
      - .github/workflows/sdk-bootstrapping-resources.yml
      - cli/**
      - infra/**
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v2
      with: 
        python-version: "3.8"
    - name: pip install notebook reqs
      run: pip install -r sdk/dev-requirements.txt
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZUREML_CREDENTIALS}}
    - name: bootstrap resources
      run: |
          echo '${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}';
          bash bootstrap.sh
      working-directory: infra
      continue-on-error: true
    - name: setup SDK
      run: |
          source "${{ github.workspace }}/infra/sdk_helpers.sh";
          source "${{ github.workspace }}/infra/init_environment.sh";
          bash setup.sh
      working-directory: sdk
      continue-on-error: true
    - name: setup-cli
      run: |
          source "${{ github.workspace }}/infra/sdk_helpers.sh";
          source "${{ github.workspace }}/infra/init_environment.sh";
          bash setup.sh
      working-directory: cli
      continue-on-error: true
    - name: cli-automl-image-classification-multilabel-task-fridge-items.yml
      if: ${{ always() }}
      run: |
          source "${{ github.workspace }}/infra/sdk_helpers.sh";
          source "${{ github.workspace }}/infra/init_environment.sh";
          python prepare_data.py --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME
      working-directory: cli/jobs/automl-standalone-jobs/cli-automl-image-classification-multilablel-task-fridge-items
      timeout-minutes: 30
      continue-on-error: true
    - name: cli-automl-image-classification-multiclass-task-fridge-items.yml
      if: ${{ always() }}
      run: |
          source "${{ github.workspace }}/infra/sdk_helpers.sh";
          source "${{ github.workspace }}/infra/init_environment.sh";
          python prepare_data.py --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME
      working-directory: cli/jobs/automl-standalone-jobs/cli-automl-image-classification-multiclass-task-fridge-items
      timeout-minutes: 30
      continue-on-error: true
    - name: cli-automl-image-instance-segmentation-task-fridge-items.yml   
      if: ${{ always() }}
      run: |
          source "${{ github.workspace }}/infra/sdk_helpers.sh";
          source "${{ github.workspace }}/infra/init_environment.sh";
          python prepare_data.py --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME
      working-directory: cli/jobs/automl-standalone-jobs/cli-automl-image-instance-segmentation-task-fridge-items
      timeout-minutes: 30
      continue-on-error: true
    - name: cli-automl-image-object-detection-task-fridge-items.yml
      if: ${{ always() }}
      run: |
          source "${{ github.workspace }}/infra/sdk_helpers.sh";
          source "${{ github.workspace }}/infra/init_environment.sh";
          python prepare_data.py --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME
      working-directory: cli/jobs/automl-standalone-jobs/cli-automl-image-object-detection-task-fridge-items
      timeout-minutes: 30
      continue-on-error: true
    - name: set sampledata dataset
      if: ${{ always() }}
      run: |
        set -x
        source "${{ github.workspace }}/infra/sdk_helpers.sh";
        source "${{ github.workspace }}/infra/init_environment.sh";
        pip install azure.cli.core
        pip install azureml-dataset-runtime
        python -c '
        import sys
        from azureml.core.workspace import Workspace
        from azureml.core import Dataset
        from azureml.core.authentication import AzureCliAuthentication
        cli_auth = AzureCliAuthentication()
        ws = Workspace.get(subscription_id=sys.argv[1],
                      resource_group=sys.argv[2],
                      name=sys.argv[3],
                      auth=cli_auth)
        datastore = ws.datastores["workspaceblobstore"]
        dataset = Dataset.File.from_files(path=[(datastore, "example-data")])
        dataset.register(ws, "sampledata")
        ' "$SUBSCRIPTION_ID" "$RESOURCE_GROUP_NAME" "$WORKSPACE_NAME"
      timeout-minutes: 300
      continue-on-error: true
    - name: create asset for cli/jobs/pipelines-with-components/basics/1b_e2e_registered_components
      if: ${{ always() }}
      run: |
        set -x
        source "${{ github.workspace }}/infra/sdk_helpers.sh";
        source "${{ github.workspace }}/infra/init_environment.sh";
        az ml component create --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME --file train.yml
        az ml component create --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME --file score.yml
        az ml component create --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME --file eval.yml
      working-directory: cli/jobs/pipelines-with-components/basics/1b_e2e_registered_components
      timeout-minutes: 30
      continue-on-error: true
    - name: setup_asset /cli/assets/data/local-folder.yml
      if: ${{ always() }}
      run: |
        set -x
        source "${{ github.workspace }}/infra/sdk_helpers.sh";
        source "${{ github.workspace }}/infra/init_environment.sh";
        az ml data create --subscription $SUBSCRIPTION_ID --group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME -f local-folder.yml
      working-directory: cli/assets/data
      timeout-minutes: 300
      continue-on-error: true
    - name: setup_dataset
      if: ${{ always() }} 
      run: |
        set -x
        source "${{ github.workspace }}/infra/sdk_helpers.sh";
        source "${{ github.workspace }}/infra/init_environment.sh";
        bash create-datasets.sh
      working-directory: setup-repo
      timeout-minutes: 300
      continue-on-error: true
    - name: Setup uri_folder
      if: ${{ always() }}
      run: |
        source "${{ github.workspace }}/infra/sdk_helpers.sh";
        source "${{ github.workspace }}/infra/init_environment.sh";
        echo 'Please manually setup local-folder-example uri_folder for cli/jobs/basics/hello-data-uri-folder.yml'
        echo 'Please manually setup local-folder-example uri_folder for cli/jobs/pipelines-with-components/basics/4d_data_input/pipeline.yml'
        cat << EOF > local_uri_floder.yml
        \$schema: https://azuremlschemas.azureedge.net/latest/data.schema.json
        name: local-folder-example
        description: Dataset created from local folder.
        type: uri_folder
        path: cli/jobs/pipelines-with-components/basics/4d_data_input/data
        EOF
        az ml data create --subscription $SUBSCRIPTION_ID --resource-group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME -f local_uri_floder.yml
      timeout-minutes: 300
      continue-on-error: true
   - name: Setup mltable
      if: ${{ always() }}
      run: |
        source "${{ github.workspace }}/infra/sdk_helpers.sh";
        source "${{ github.workspace }}/infra/init_environment.sh";
        echo 'Please manually setup local-folder-example mltable for cli/jobs/basics/hello-dataset.yml'
        cat << EOF > local_mltable.yml
        \$schema: https://azuremlschemas.azureedge.net/latest/data.schema.json
        name: sampledata 
        description: Dataset created from local folder.
        type: mltable
        path: cli/jobs/basics/hello-automl
        EOF
        az ml data create --subscription $SUBSCRIPTION_ID --resource-group $RESOURCE_GROUP_NAME --workspace $WORKSPACE_NAME -f local_mltable.yml
      timeout-minutes: 300
      continue-on-error: true
