name: kubernetes-compute-gpu-resources-setup
on:
  schedule:
    - cron: "0 20 * * *"
  workflow_dispatch:
    inputs:
      AMLARC_TEST_REGION:
        description: 'Resource Region'
        required: false
        default: 'eastus'
      AMLARC_RELEASE_TRAIN:
        description: 'Release version: experimental, staging or stable'
        required: false
        default: 'staging'
      REINSTALL_EXTENSION:
        description: 'Whether to reinstall extension: true or false'
        required: false
        default: 'false'
      SETUP_DATASET:
        description: 'Whether to init dataset in workspace: true or false'
        required: false
        default: 'false'
      FILE_TICKET:
        description: 'Whether to file icm ticket: true or false'
        required: false
        default: 'false'
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SUBSCRIPTION: 6560575d-fa06-4e7d-95fb-f962e74efd7a
      RESOURCE_GROUP: azureml-examples-rg
      LOCATION: ${{ github.event.inputs.AMLARC_TEST_REGION }}
      WORKSPACE: amlarc-githubtest-ws
      VM_SKU: STANDARD_NC12
      CLUSTER_TYPE: managedClusters
      RELEASE_TRAIN: ${{ github.event.inputs.AMLARC_RELEASE_TRAIN }}
      COMPUTE: "gpu-cluster"
      EXTENSION_SETTINGS: "enableTraining=True enableInference=True inferenceRouterServiceType=loadBalancer allowInsecureConnections=True installNvidiaDevicePlugin=True installDcgmExporter=True"

      KEY_VAULT_NAME: amlarcgithubworkflowkv
      KEY_VAULT_SUB: dd94e4df-b58f-4e81-9c5e-bd72a4b2ef9e
      KEY_VAULT_RG: amlarc-github-workflow
      REINSTALL_EXTENSION: ${{ github.event.inputs.REINSTALL_EXTENSION }}
      SETUP_DATASET: ${{ github.event.inputs.SETUP_DATASET }}

      SEVERITY: 3
      OWNERS: amlarc@microsoft.com
      TITLE: "[Github Workflow] kubernetes-compute-gpu-resources-setup failed"
      GITHUB_REPO: https://github.com/Azure/azureml-examples
      WORKFLOW_URL: https://github.com/Azure/azureml-examples/actions/workflows/kubernetes-compute-gpu-resources-setup.yml
      TSG_ID: https://microsoft.sharepoint.com/teams/Vienna/_layouts/15/Doc.aspx?sourcedoc=%7B7ebf9ccd-fa20-4e82-8b2b-6c14c9f1740f%7D&action=edit&wd=target(AMLArcTSG.one%7C69e8bdb1-5734-4b07-967a-5a50a91cf040%2FTroubleshooting%20github%20workflow%7C53a1a232-f9f0-4192-b7d2-0474848ebb18%2F)&share=IgHNnL9-IPqCTosrbBTJ8XQPAVwbVLD_kFe92G2Y9a49ROs
      ICM_MESSAGE: "Failed to setup gpu resources for kubernetes compute github workflow!"

    steps:
    - name: check out repo
      uses: actions/checkout@v2
      with:
        ref: sdk-preview
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: install tools
      run: bash .github/kubernetes-compute/tool.sh install_tools
      timeout-minutes: 30
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_AE_CREDS}}
      timeout-minutes: 30
    
    - name: refresh_lock_file
      run: bash .github/kubernetes-compute/tool.sh refresh_lock_file
      timeout-minutes: 30

    # provision resources
    - name: setup_aks
      run: bash .github/kubernetes-compute/tool.sh setup_aks
      timeout-minutes: 30
    - name: install_extension
      run: |
        bash .github/kubernetes-compute/tool.sh install_extension
      timeout-minutes: 30
    - name: setup_workspace
      run: bash .github/kubernetes-compute/tool.sh setup_workspace
      timeout-minutes: 30
    - name: setup_compute
      run: |
        bash .github/kubernetes-compute/tool.sh setup_compute
      timeout-minutes: 30
    - name: setup_instance_type
      run: |
        bash .github/kubernetes-compute/tool.sh get_kubeconfig
        bash .github/kubernetes-compute/tool.sh setup_instance_type defaultinstancetype 4 32Gi  2
        bash .github/kubernetes-compute/tool.sh setup_instance_type cpu 4 32Gi
        bash .github/kubernetes-compute/tool.sh setup_instance_type gpu 4 32Gi 2
      timeout-minutes: 30

    - name: setup_dataset
      run: |
        set -x
        if [ "${SETUP_DATASET}" == "true" ] ; then
          wget https://azcopyvnext.azureedge.net/release20220511/azcopy_linux_amd64_10.15.0.tar.gz
          tar zxf azcopy_linux_amd64_10.15.0.tar.gz
          cp azcopy_linux_amd64_10.15.0/azcopy .
          az account set --subscription $SUBSCRIPTION
          az configure --defaults group=$RESOURCE_GROUP workspace=$WORKSPACE location=$LOCATION
          bash create-datasets.sh
          bash copy-data.sh
        fi
      working-directory: setup-repo
      timeout-minutes: 300

    - name: remove_lock_file
      run: |
        bash .github/kubernetes-compute/tool.sh remove_lock_file
      timeout-minutes: 30

    - name: file_icm
      if: ${{ always() }}
      run: |
        if [ "$(bash .github/kubernetes-compute/tool.sh check_lock_file)" == "true" ] && [ "${{ github.event.inputs.FILE_TICKET }}" != "false" ] ; then
            # download certificates
            export ICM_HOST_NAME=ICM-HOST-AML-EXAMPLES
            export ICM_CONNECTOR_ID_NAME=ICM-CONNECTOR-ID-AML-EXAMPLES
            export ICM_ROUTING_ID_NAME=ICM-ROUTING-ID-AML-EXAMPLES
            bash .github/kubernetes-compute/tool.sh download_icm_cert
            export ICM_HOST=$(cat icm_host)
            export CONNECTOR_ID=$(cat icm_connector_id)
            export ROUTING_ID=$(cat icm_routing_id)
            export OtherIcmMessage="${ICM_MESSAGE}"
            export SUMMARY=$(bash .github/kubernetes-compute/tool.sh gen_summary_for_github_test)
            bash .github/kubernetes-compute/tool.sh file_icm
        fi
      timeout-minutes: 30
   
