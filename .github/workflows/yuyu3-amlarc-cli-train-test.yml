name: amlarc-examples-test
on:
  schedule:
    - cron: "0 23 * * *"
  workflow_dispatch:
    inputs:
      AMLARC_TEST_REGION:
        description: 'Resource Region'
        required: false
        default: 'eastus'
      AMLARC_RELEASE_TRAIN:
        description: 'Release version: experimental, staging or stable'
        required: false
        default: 'staging'
      CLEANUP_CLUSTER:
        description: 'Whether to delete cluster: true or false'
        required: false
        default: 'false'
      CLEANUP_WORKSPACE:
        description: 'Whether to delete workspace: true or false'
        required: false
        default: 'false'
      FILE_TICKET:
        description: 'Whether to file icm ticket: true or false'
        required: false
        default: 'false'
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SUBSCRIPTION: 4aaa645c-5ae2-4ae9-a17a-84b9023bc56a
      RESOURCE_GROUP: yuyu3-test
      LOCATION: eastus2euap
      WORKSPACE: canary
      AKS_CLUSTER_NAME: test-ask

    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: install az cli
      shell: bash
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    - name: install tools
      run: bash .github/amlarc-tool.sh install_tools
      timeout-minutes: 30
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZ_AE_CREDS}}
      timeout-minutes: 30
    - name: get kubeconfig
      shell: bash
      run: |
        bash .github/amlarc-tool.sh get_kubeconfig
    - name: set compute target
      shell: bash
      run: |
        bash .github/amlarc-tool.sh setup_instance_type defaultinstancetype 2 4Gi
        bash .github/amlarc-tool.sh setup_instance_type cpu 2 4Gi
        bash .github/amlarc-tool.sh setup_instance_type gpu 2 4Gi 1
        bash -c "echo Waiting 30 seconds for instance type to take effect ...; sleep 30"
        
    # setup repo
     - name: create dataset
       run: |
         az account set --subscription $SUBSCRIPTION
         az configure --defaults group=$RESOURCE_GROUP workspace=$WORKSPACE location=$LOCATION
         bash create-datasets.sh
       working-directory: setup-repo
       timeout-minutes: 30

      ## run training cli test cases
      ## single step
      # gpu perf
    - name: run cli/jobs/single-step/gpu_perf/gpu_perf_job.yaml
      run: INSTANCE_TYPE_NAME=gpu bash .github/amlarc-tool.sh run_cli_job cli/jobs/single-step/gpu_perf/gpu_perf_job.yaml
      continue-on-error: true
      timeout-minutes: 40

    # check result
    - name: count_result
      if: ${{ always() }}
      run: |
        bash .github/amlarc-tool.sh count_result
      timeout-minutes: 30