name: kubernetes-compute-training-cli-jobs-automl-dynamic-data
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      TEST_REGION:
        description: 'Resource Region'
        required: false
        default: 'eastus'
      TIMEOUT:
        description: 'Timeout of a single job'
        required: false
        default: '300m'
      FILE_TICKET:
        description: 'Whether to file icm ticket: true or false'
        required: false
        default: 'false'
      WORKSPACE:
        description: 'The workspace of the cluster'
        required: false
        default: 'amlarc-githubtest-ws'
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JOB_LIST_FILE: kubernetes-compute-training-cli-jobs-automl-dynamic-data.txt
      TIMEOUT: '300m'
      MIN_SUCCESS_NUM: 1
      WORKFLOW: https://github.com/Azure/azureml-examples/actions/workflows/kubernetes-compute-training-cli-jobs-automl-dynamic-data.yml

    steps:
    - name: check out repo
      uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: setup environment
      run: |
        bash .github/kubernetes-compute/tool.sh set_default_env
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "LOCATION=${{ github.event.inputs.TEST_REGION }}" | tee -a $GITHUB_ENV
          echo "TIMEOUT=${{ github.event.inputs.TIMEOUT }}" | tee -a $GITHUB_ENV
          echo "FILE_TICKET=${{ github.event.inputs.FILE_TICKET }}" | tee -a $GITHUB_ENV
          echo "WORKSPACE=${{ github.event.inputs.WORKSPACE }}" | tee -a $GITHUB_ENV
        fi
        bash .github/kubernetes-compute/tool.sh install_tools
        pip install azure-ai-textanalytics
        pip install azure-identity
        pip install azure-ai-ml
        pip install azure-cli
        set -x +e
        bash cli/setup.sh 
        az version
      timeout-minutes: 30
    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZUREML_CREDENTIALS}}
      timeout-minutes: 30

    - name: collect jobs
      run: |
        echo "cli/jobs/pipelines/automl/image-instance-segmentation-task-fridge-items-pipeline/pipeline.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/pipelines/automl/image-multiclass-classification-fridge-items-pipeline/pipeline.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/pipelines/automl/image-multilabel-classification-fridge-items-pipeline/pipeline.yml" | tee -a $JOB_LIST_FILE
        
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-classification-multiclass-task-fridge-items/cli-automl-image-classification-multiclass-task-fridge-items.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-classification-multiclass-task-fridge-items/cli-automl-image-classification-multiclass-task-fridge-items-automode.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-instance-segmentation-task-fridge-items/cli-automl-image-instance-segmentation-task-fridge-items.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-instance-segmentation-task-fridge-items/cli-automl-image-instance-segmentation-task-fridge-items-automode.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-classification-multilabel-task-fridge-items/cli-automl-image-classification-multilabel-task-fridge-items.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-classification-multilabel-task-fridge-items/cli-automl-image-classification-multilabel-task-fridge-items-automode.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-object-detection-task-fridge-items/cli-automl-image-object-detection-task-fridge-items.yml" | tee -a $JOB_LIST_FILE
        echo "cli/jobs/automl-standalone-jobs/cli-automl-image-object-detection-task-fridge-items/cli-automl-image-object-detection-task-fridge-items-automode.yml" | tee -a $JOB_LIST_FILE
      timeout-minutes: 30
    - name: prepare data
      run: |
        ROOT_DIR=$(pwd)
        for job in $(cat $JOB_LIST_FILE); do
          cd $ROOT_DIR
          if [[ "$job" = *"yml" ]]; then
            echo "Prepare data for job: $job"
            JOB_SPEC_FILE=$(basename $job)
            JOB_DIR=$(dirname $job)

            cd $JOB_DIR
            sed -i -e "s/from azure.identity import InteractiveBrowserCredential/from azureml.core.authentication import AzureCliAuthentication/g" prepare_data.py
            sed -i -e "s/credential = InteractiveBrowserCredential()/credential = AzureCliAuthentication()/g" prepare_data.py

            python prepare_data.py --subscription $SUBSCRIPTION --group $RESOURCE_GROUP --workspace $WORKSPACE
            
            sleep 30
          else
            echo "Found invalid job: $job"
          fi
        done
      timeout-minutes: 300

    - name: run jobs
      run: |
        bash .github/kubernetes-compute/tool.sh run_jobs_from_file "$JOB_LIST_FILE"
      timeout-minutes: 300

    - name: check jobs
      if: ${{ always() }}
      run: |
        bash .github/kubernetes-compute/tool.sh count_result
      timeout-minutes: 30

    # report metrics
    - name: report_metrics
      if: ${{ always() && github.event_name != 'pull_request' }}
      run: |
        if [ "$FILE_TICKET" == "true" ]; then
          bash .github/kubernetes-compute/tool.sh report_metrics upload_test_result_metrics
        fi
      timeout-minutes: 120
