{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "CreationContextSchema": {
      "type": "object",
      "properties": {
        "created_at": {
          "title": "created_at",
          "type": "string",
          "format": "date-time"
        },
        "created_by": {
          "title": "created_by",
          "type": "string"
        },
        "created_by_type": {
          "title": "created_by_type",
          "type": "string"
        },
        "last_modified_at": {
          "title": "last_modified_at",
          "type": "string",
          "format": "date-time"
        },
        "last_modified_by": {
          "title": "last_modified_by",
          "type": "string"
        },
        "last_modified_by_type": {
          "title": "last_modified_by_type",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "BanditPolicySchema": {
      "type": "object",
      "properties": {
        "delay_evaluation": {
          "title": "delay_evaluation",
          "type": "number",
          "format": "integer"
        },
        "evaluation_interval": {
          "title": "evaluation_interval",
          "type": "number",
          "format": "integer"
        },
        "policy_type": {
          "type": "string",
          "enum": [
            "bandit"
          ],
          "title": "policy_type"
        },
        "slack_amount": {
          "title": "slack_amount",
          "type": "number",
          "format": "float"
        },
        "slack_factor": {
          "title": "slack_factor",
          "type": "number",
          "format": "float"
        }
      },
      "required": [
        "policy_type"
      ],
      "additionalProperties": false
    },
    "MedianStoppingPolicySchema": {
      "type": "object",
      "properties": {
        "delay_evaluation": {
          "title": "delay_evaluation",
          "type": "number",
          "format": "integer"
        },
        "evaluation_interval": {
          "title": "evaluation_interval",
          "type": "number",
          "format": "integer"
        },
        "policy_type": {
          "type": "string",
          "enum": [
            "median_stopping"
          ],
          "title": "policy_type"
        }
      },
      "required": [
        "policy_type"
      ],
      "additionalProperties": false
    },
    "TruncationSelectionPolicySchema": {
      "type": "object",
      "properties": {
        "delay_evaluation": {
          "title": "delay_evaluation",
          "type": "number",
          "format": "integer"
        },
        "evaluation_interval": {
          "title": "evaluation_interval",
          "type": "number",
          "format": "integer"
        },
        "policy_type": {
          "type": "string",
          "enum": [
            "truncation_selection"
          ],
          "title": "policy_type"
        },
        "truncation_percentage": {
          "title": "truncation_percentage",
          "type": "number",
          "format": "integer"
        }
      },
      "required": [
        "policy_type",
        "truncation_percentage"
      ],
      "additionalProperties": false
    },
    "InputDatasetSchema": {
      "type": "object",
      "properties": {
        "dataset": {
          "anyOf": [
            {
              "type": "string",
              "pattern": "^azureml:.*",
              "arm_type": "datasets",
              "title": "dataset"
            },
            {
              "type": "object",
              "$ref": "#/definitions/AnonymousDatasetSchema"
            },
            {
              "type": "string",
              "pattern": "^file:.*"
            }
          ]
        },
        "mode": {
          "type": "string",
          "enum": [
            "download",
            "ro_mount",
            "rw_mount"
          ],
          "title": "mode"
        }
      },
      "required": [
        "dataset"
      ],
      "additionalProperties": false
    },
    "AnonymousDatasetSchema": {
      "type": "object",
      "properties": {
        "creation_context": {
          "type": "object",
          "$ref": "#/definitions/CreationContextSchema"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "datasets",
          "title": "id",
          "readonly": true
        },
        "local_path": {
          "title": "local_path",
          "type": "string",
          "description": "the path from which the artifact gets uploaded to the cloud"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "paths": {
          "anyOf": [
            {
              "title": "paths",
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/PathSchema"
              }
            }
          ]
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "additionalProperties": {}
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "version"
        }
      },
      "additionalProperties": false
    },
    "PathSchema": {
      "type": "object",
      "properties": {
        "file": {
          "title": "file",
          "type": "string",
          "description": "URI pointing to file."
        },
        "folder": {
          "title": "folder",
          "type": "string",
          "description": "URI pointing to folder."
        }
      },
      "additionalProperties": false
    },
    "InputDataSchema": {
      "type": "object",
      "properties": {
        "data": {
          "anyOf": [
            {
              "type": "string",
              "pattern": "^azureml:.*",
              "arm_type": "data",
              "title": "data"
            },
            {
              "type": "object",
              "$ref": "#/definitions/AnonymousDataSchema"
            },
            {
              "type": "string",
              "pattern": "^file:.*"
            }
          ]
        },
        "mode": {
          "type": "string",
          "enum": [
            "mount",
            "download"
          ],
          "title": "mode"
        }
      },
      "additionalProperties": false
    },
    "AnonymousDataSchema": {
      "type": "object",
      "properties": {
        "creation_context": {
          "type": "object",
          "$ref": "#/definitions/CreationContextSchema"
        },
        "datastore": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "datastores",
          "title": "datastore"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "title": "id",
          "type": "string"
        },
        "local_path": {
          "title": "local_path",
          "type": "string",
          "description": "the path from which the artifact gets uploaded to the cloud"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "path": {
          "title": "path",
          "type": "string",
          "description": "URI pointing to a file or directory."
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "additionalProperties": {}
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "version"
        }
      },
      "additionalProperties": false
    },
    "InputUriSchema": {
      "type": "object",
      "properties": {
        "file": {
          "title": "file",
          "type": "string"
        },
        "folder": {
          "title": "folder",
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "download",
            "rw_mount",
            "ro_mount"
          ],
          "title": "mode"
        }
      },
      "additionalProperties": false
    },
    "InputLiteralValueSchema": {
      "type": "object",
      "properties": {
        "value": {
          "anyOf": [
            {
              "title": "value",
              "type": "string"
            },
            {
              "title": "value",
              "type": "boolean"
            },
            {
              "title": "value",
              "type": "number",
              "format": "integer"
            },
            {
              "title": "value",
              "type": "number",
              "format": "float"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "SweepJobLimitsSchema": {
      "type": "object",
      "properties": {
        "max_concurrent_trials": {
          "title": "max_concurrent_trials",
          "type": "number",
          "format": "integer",
          "description": "Sweep Job max concurrent trials."
        },
        "max_total_trials": {
          "title": "max_total_trials",
          "type": "number",
          "format": "integer",
          "description": "Sweep Job max total trials."
        },
        "timeout": {
          "title": "timeout",
          "type": "number",
          "format": "integer",
          "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds."
        },
        "trial_timeout": {
          "title": "trial_timeout",
          "type": "number",
          "format": "integer",
          "description": "Sweep Job Trial timeout value."
        }
      },
      "additionalProperties": false
    },
    "SweepObjectiveSchema": {
      "type": "object",
      "properties": {
        "goal": {
          "type": "string",
          "enum": [
            "minimize",
            "maximize"
          ],
          "title": "goal"
        },
        "primary_metric": {
          "title": "primary_metric",
          "type": "string"
        }
      },
      "required": [
        "goal",
        "primary_metric"
      ],
      "additionalProperties": false
    },
    "JobOutputSchema": {
      "type": "object",
      "properties": {
        "datastore_id": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "datastores",
          "title": "datastore_id"
        },
        "path": {
          "title": "path",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OutputEntrySchema": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "$ref": "#/definitions/DatasetSchema"
        },
        "mode": {
          "type": "string",
          "enum": [
            "mount",
            "upload",
            "rw_mount"
          ],
          "title": "mode"
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        }
      },
      "additionalProperties": false
    },
    "DatasetSchema": {
      "type": "object",
      "properties": {
        "creation_context": {
          "type": "object",
          "$ref": "#/definitions/CreationContextSchema"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "datasets",
          "title": "id",
          "readonly": true
        },
        "local_path": {
          "title": "local_path",
          "type": "string",
          "description": "the path from which the artifact gets uploaded to the cloud"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "paths": {
          "anyOf": [
            {
              "title": "paths",
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/PathSchema"
              }
            }
          ]
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "additionalProperties": {}
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "version"
        }
      },
      "additionalProperties": false
    },
    "OutputUriSchema": {
      "type": "object",
      "properties": {
        "file": {
          "title": "file",
          "type": "string",
          "readonly": true
        },
        "folder": {
          "title": "folder",
          "type": "string",
          "readonly": true
        },
        "mode": {
          "type": "string",
          "enum": [
            "upload",
            "rw_mount"
          ],
          "title": "mode",
          "readonly": true
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        }
      },
      "additionalProperties": false
    },
    "ChoiceSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "choice"
          ],
          "title": "type"
        },
        "values": {
          "title": "values",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "title": "values",
                "type": "number",
                "format": "float"
              },
              {
                "title": "values",
                "type": "string"
              },
              {
                "title": "values",
                "type": "object",
                "additionalProperties": {}
              }
            ]
          }
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "UniformSchema": {
      "type": "object",
      "properties": {
        "max_value": {
          "title": "max_value",
          "type": "number",
          "format": "float"
        },
        "min_value": {
          "title": "min_value",
          "type": "number",
          "format": "float"
        },
        "type": {
          "type": "string",
          "enum": [
            "uniform",
            "loguniform"
          ],
          "title": "type"
        }
      },
      "required": [
        "max_value",
        "min_value",
        "type"
      ],
      "additionalProperties": false
    },
    "QUniformSchema": {
      "type": "object",
      "properties": {
        "max_value": {
          "anyOf": [
            {
              "title": "max_value",
              "type": "number",
              "format": "integer"
            },
            {
              "title": "max_value",
              "type": "number",
              "format": "float"
            }
          ]
        },
        "min_value": {
          "anyOf": [
            {
              "title": "min_value",
              "type": "number",
              "format": "integer"
            },
            {
              "title": "min_value",
              "type": "number",
              "format": "float"
            }
          ]
        },
        "q": {
          "title": "q",
          "type": "number",
          "format": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "quniform",
            "qloguniform"
          ],
          "title": "type"
        }
      },
      "required": [
        "q",
        "type"
      ],
      "additionalProperties": false
    },
    "NormalSchema": {
      "type": "object",
      "properties": {
        "mu": {
          "title": "mu",
          "type": "number",
          "format": "float"
        },
        "sigma": {
          "title": "sigma",
          "type": "number",
          "format": "float"
        },
        "type": {
          "type": "string",
          "enum": [
            "normal",
            "lognormal"
          ],
          "title": "type"
        }
      },
      "required": [
        "mu",
        "sigma",
        "type"
      ],
      "additionalProperties": false
    },
    "QNormalSchema": {
      "type": "object",
      "properties": {
        "mu": {
          "title": "mu",
          "type": "number",
          "format": "float"
        },
        "q": {
          "title": "q",
          "type": "number",
          "format": "integer"
        },
        "sigma": {
          "title": "sigma",
          "type": "number",
          "format": "float"
        },
        "type": {
          "type": "string",
          "enum": [
            "qnormal",
            "qlognormal"
          ],
          "title": "type"
        }
      },
      "required": [
        "mu",
        "q",
        "sigma",
        "type"
      ],
      "additionalProperties": false
    },
    "RandintSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "randint"
          ],
          "title": "type"
        },
        "upper": {
          "title": "upper",
          "type": "number",
          "format": "integer"
        }
      },
      "required": [
        "type",
        "upper"
      ],
      "additionalProperties": false
    },
    "JobServiceSchema": {
      "type": "object",
      "properties": {
        "endpoint": {
          "title": "endpoint",
          "type": "string",
          "readonly": true
        },
        "error_message": {
          "title": "error_message",
          "type": "string",
          "readonly": true
        },
        "job_service_type": {
          "title": "job_service_type",
          "type": "string"
        },
        "port": {
          "title": "port",
          "type": "number",
          "format": "integer"
        },
        "properties": {
          "title": "properties",
          "type": "object",
          "additionalProperties": {}
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "status": {
          "title": "status",
          "type": "string",
          "readonly": true
        }
      },
      "additionalProperties": false
    },
    "ParameterizedCommandSchema": {
      "type": "object",
      "properties": {
        "code": {
          "anyOf": [
            {
              "type": "object",
              "$ref": "#/definitions/AnonymousCodeAssetSchema"
            },
            {
              "type": "string",
              "pattern": "^azureml:.*",
              "arm_type": "codes",
              "title": "code"
            },
            {
              "type": "string",
              "pattern": "^file:.*"
            }
          ]
        },
        "command": {
          "title": "command",
          "type": "string",
          "description": "The command run and the parameters passed. This string may contain place holders of inputs in {}. "
        },
        "distribution": {
          "anyOf": [
            {
              "type": "object",
              "$ref": "#/definitions/PyTorchDistributionSchema"
            },
            {
              "type": "object",
              "$ref": "#/definitions/TensorFlowDistributionSchema"
            },
            {
              "type": "object",
              "$ref": "#/definitions/MPIDistributionSchema"
            }
          ]
        },
        "environment": {
          "anyOf": [
            {
              "type": "object",
              "$ref": "#/definitions/AnonymousEnvironmentSchema"
            },
            {
              "type": "string",
              "pattern": "^azureml:.*",
              "arm_type": "environments",
              "title": "environment"
            },
            {
              "type": "string",
              "pattern": "^file:.*"
            }
          ]
        },
        "environment_variables": {
          "title": "environment_variables",
          "type": "object",
          "additionalProperties": {
            "title": "environment_variables",
            "type": "string"
          }
        },
        "resources": {
          "type": "object",
          "$ref": "#/definitions/ResourceConfigurationSchema"
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        }
      },
      "required": [
        "command",
        "environment"
      ],
      "additionalProperties": false
    },
    "AnonymousCodeAssetSchema": {
      "type": "object",
      "properties": {
        "code_uri": {
          "title": "code_uri",
          "type": "string",
          "description": "Blob URI pointing to a file or directory where code asset is located."
        },
        "creation_context": {
          "type": "object",
          "$ref": "#/definitions/CreationContextSchema"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "codes",
          "title": "id",
          "readonly": true
        },
        "local_path": {
          "title": "local_path",
          "type": "string",
          "description": "the path from which the artifact gets uploaded to the cloud"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "additionalProperties": {}
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "version"
        }
      },
      "additionalProperties": false
    },
    "PyTorchDistributionSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "pytorch"
          ],
          "title": "type"
        },
        "process_count_per_instance": {
          "title": "process_count_per_instance",
          "type": "number",
          "format": "integer"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "TensorFlowDistributionSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "tensorflow"
          ],
          "title": "type"
        },
        "parameter_server_count": {
          "title": "parameter_server_count",
          "type": "number",
          "format": "integer"
        },
        "worker_count": {
          "title": "worker_count",
          "type": "number",
          "format": "integer"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "MPIDistributionSchema": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "mpi"
          ],
          "title": "type"
        },
        "process_count_per_instance": {
          "title": "process_count_per_instance",
          "type": "number",
          "format": "integer"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "AnonymousEnvironmentSchema": {
      "type": "object",
      "properties": {
        "build": {
          "type": "object",
          "$ref": "#/definitions/BuildContextSchema"
        },
        "conda_file": {
          "anyOf": [
            {
              "title": "conda_file",
              "type": "string"
            },
            {
              "title": "conda_file",
              "type": "string"
            }
          ]
        },
        "creation_context": {
          "type": "object",
          "$ref": "#/definitions/CreationContextSchema"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "id": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "environments",
          "title": "id",
          "readonly": true
        },
        "image": {
          "title": "image",
          "type": "string"
        },
        "inference_config": {
          "type": "object",
          "$ref": "#/definitions/InferenceConfigSchema"
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "os_type": {
          "type": "string",
          "enum": [
            "linux",
            "windows"
          ],
          "title": "os_type"
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "additionalProperties": {}
        },
        "version": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            }
          ],
          "title": "version"
        }
      },
      "additionalProperties": false
    },
    "BuildContextSchema": {
      "type": "object",
      "properties": {
        "context_uri": {
          "title": "context_uri",
          "type": "string"
        },
        "dockerfile_path": {
          "title": "dockerfile_path",
          "type": "string"
        },
        "local_path": {
          "title": "local_path",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "InferenceConfigSchema": {
      "type": "object",
      "properties": {
        "liveness_route": {
          "type": "object",
          "$ref": "#/definitions/RouteSchema"
        },
        "readiness_route": {
          "type": "object",
          "$ref": "#/definitions/RouteSchema"
        },
        "scoring_route": {
          "type": "object",
          "$ref": "#/definitions/RouteSchema"
        }
      },
      "required": [
        "liveness_route",
        "readiness_route",
        "scoring_route"
      ],
      "additionalProperties": false
    },
    "RouteSchema": {
      "type": "object",
      "properties": {
        "path": {
          "title": "path",
          "type": "string"
        },
        "port": {
          "title": "port",
          "type": "number",
          "format": "integer"
        }
      },
      "required": [
        "path",
        "port"
      ],
      "additionalProperties": false
    },
    "ResourceConfigurationSchema": {
      "type": "object",
      "properties": {
        "instance_count": {
          "title": "instance_count",
          "type": "number",
          "format": "integer"
        },
        "instance_type": {
          "title": "instance_type",
          "type": "string",
          "description": "The instance type to make available to this job."
        },
        "properties": {
          "title": "properties",
          "type": "object",
          "additionalProperties": {}
        }
      },
      "additionalProperties": false
    },
    "SweepJobSchema": {
      "type": "object",
      "properties": {
        "compute": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "local"
              ],
              "title": "compute"
            },
            {
              "type": "string",
              "pattern": "^azureml:.*",
              "arm_type": "computes",
              "title": "compute"
            },
            {
              "title": "compute",
              "type": "string"
            }
          ]
        },
        "creation_context": {
          "type": "object",
          "$ref": "#/definitions/CreationContextSchema"
        },
        "description": {
          "title": "description",
          "type": "string"
        },
        "display_name": {
          "title": "display_name",
          "type": "string"
        },
        "early_termination": {
          "anyOf": [
            {
              "type": "object",
              "$ref": "#/definitions/BanditPolicySchema"
            },
            {
              "type": "object",
              "$ref": "#/definitions/MedianStoppingPolicySchema"
            },
            {
              "type": "object",
              "$ref": "#/definitions/TruncationSelectionPolicySchema"
            }
          ]
        },
        "experiment_name": {
          "title": "experiment_name",
          "type": "string"
        },
        "id": {
          "type": "string",
          "pattern": "^azureml:.*",
          "arm_type": "jobs",
          "title": "id",
          "readonly": true
        },
        "inputs": {
          "title": "inputs",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "$ref": "#/definitions/InputDatasetSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/InputDataSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/InputUriSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/InputLiteralValueSchema"
              },
              {
                "title": "inputs",
                "type": "number",
                "format": "integer"
              },
              {
                "title": "inputs",
                "type": "string"
              },
              {
                "title": "inputs",
                "type": "boolean"
              },
              {
                "title": "inputs",
                "type": "number",
                "format": "float"
              }
            ]
          }
        },
        "limits": {
          "type": "object",
          "$ref": "#/definitions/SweepJobLimitsSchema"
        },
        "log_files": {
          "title": "log_files",
          "type": "object",
          "additionalProperties": {
            "title": "log_files",
            "type": "string"
          }
        },
        "name": {
          "title": "name",
          "type": "string"
        },
        "objective": {
          "type": "object",
          "$ref": "#/definitions/SweepObjectiveSchema",
          "description": "The name and optimization goal of the primary metric."
        },
        "output": {
          "type": "object",
          "$ref": "#/definitions/JobOutputSchema",
          "description": "The output configurations for the component used."
        },
        "outputs": {
          "title": "outputs",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "$ref": "#/definitions/OutputEntrySchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/OutputUriSchema"
              }
            ]
          }
        },
        "parent_job_name": {
          "title": "parent_job_name",
          "type": "string",
          "readonly": true
        },
        "properties": {
          "title": "properties",
          "type": "object",
          "additionalProperties": {
            "title": "properties",
            "type": "string"
          }
        },
        "sampling_algorithm": {
          "type": "string",
          "enum": [
            "bayesian",
            "grid",
            "random"
          ],
          "title": "sampling_algorithm"
        },
        "$schema": {
          "title": "$schema",
          "type": "string",
          "readonly": true
        },
        "search_space": {
          "title": "search_space",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "$ref": "#/definitions/ChoiceSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/UniformSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/QUniformSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/NormalSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/QNormalSchema"
              },
              {
                "type": "object",
                "$ref": "#/definitions/RandintSchema"
              }
            ]
          }
        },
        "services": {
          "title": "services",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "$ref": "#/definitions/JobServiceSchema"
          }
        },
        "status": {
          "title": "status",
          "type": "string",
          "readonly": true
        },
        "tags": {
          "title": "tags",
          "type": "object",
          "additionalProperties": {
            "title": "tags",
            "type": "string"
          }
        },
        "trial": {
          "type": "object",
          "$ref": "#/definitions/ParameterizedCommandSchema"
        },
        "type": {
          "type": "string",
          "enum": [
            "sweep"
          ],
          "title": "type"
        }
      },
      "required": [
        "compute",
        "objective",
        "sampling_algorithm",
        "trial",
        "type"
      ],
      "additionalProperties": false
    }
  },
  "$ref": "#/definitions/SweepJobSchema"
}